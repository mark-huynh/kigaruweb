{"version":3,"sources":["Footer.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","className","Navbar","App","src_Navbar","src_Footer","class","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf5b0171.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Footer = () => {\n\nreturn(\n\n<p className = \"disclaimer\">\n  All prices subject to change. All items subject to availability. Consuming raw or undercooked meats, poultry, seafood, shellfish, or eggs may increase your risk of foodbourne illnesses.\n  Â©2018 All rights reserved\n</p>\n\n);\n}\n\nexport default Footer;\n","import React from \"react\";\n\n\nconst Navbar = () => {\n\nreturn(\n\n<ul className = \"nav\">\n  <li>Home</li>\n  <li>Sushi Bar</li>\n  <li>Appetizers</li>\n  <li>Main Dish</li>\n  <li>Drinks Etc</li>\n  <li>Contact</li>\n</ul>\n\n);\n}\n\nexport default Navbar;\n","import React from 'react';\nimport Footer from './Footer.js';\nimport Navbar from './Navbar.js';\n\nfunction App() {\n  return (\n\n\n    <div className = \"main\">\n      <Navbar/>\n      <Footer />\n    <ul className = \"hours\">\n      <li>Monday - Saturday asdfas: 5PM - 11PM</li>\n      <li>Sunday : Closed</li>\n    </ul>\n\n    <div className = \"SushiTab\">\n      <div class=\"grid-item\">\n      <ul>\n        <li>Squid   3.5</li>\n        <li>Shrimp   4</li>\n        <li>Tuna   5</li>\n        <li>Salmon   5</li>\n        <li>Mackerel   4</li>\n        <li>Octopus   4.5</li>\n        <li>Eel   6.5</li>\n        <li>Egg   3.25</li>\n      </ul>\n    </div>\n      <div class=\"grid-item\">\n        <ul>\n          <li>Albacore   4.5</li>\n          <li>Sweet Shrimp   6.5</li>\n          <li>Yellowtail   5</li>\n          <li>Surf Clam   3.75</li>\n          <li>Salmon Toro   5</li>\n          <li>Aburi Mackerel   4.25</li>\n          <li>Aburi Salmon   5.25</li>\n          <li>Aburi Tuna   5.25</li>\n        </ul>\n      </div>\n      <div class=\"grid-item\">\n        <ul>\n          <li>Creamy Scallop   3.75</li>\n          <li>Salmon Roe   5.25</li>\n          <li>Real Crab   5.25</li>\n          <li>Smelt Roe   3.5</li>\n          <li>Flying Fish Egg   4.25</li>\n          <li>Uni   7.5</li>\n          <li>Fried Bean Curd   2.5</li>\n          <li>Scallop   5</li>\n        </ul>\n      </div>\n      <div class=\"grid-item\">\n        <ul>\n          <li>Creamy Scallop   3.75</li>\n          <li>Salmon Roe   5.25</li>\n          <li>Real Crab   5.25</li>\n          <li>Smelt Roe   3.5</li>\n        </ul>\n      </div>\n      <div class=\"grid-item\">\n        <ul>\n          <li>Albacore   4.5</li>\n          <li>Yellowtail   5</li>\n          <li>Surf Clam   3.75</li>\n          <li>Salmon Toro   5</li>\n          <li>Octopus   4.5</li>\n        </ul>\n      </div>\n      <div class=\"grid-item\">\n        <ul>\n          <li>Aburi Mackerel   4.25</li>\n          <li>Aburi Salmon   5.25</li>\n          <li>Aburi Tuna   5.25</li>\n          <li>Scallop   6.5</li>\n        </ul>\n      </div>\n      <div class=\"grid-item\">\n        <li>Cucumber Roll (6pc)   4</li>\n        <li>Salmon Roll (6pc)   5.5</li>\n        <li>Tuna Roll (6pc)   5.5</li>\n        <li>Avocado Roll (6pc)   4.75</li>\n        <li>Avocu Roll (6pc)   5.75\n          <p>\n            Avocado, cucumber\n          </p>\n        </li>\n        <li>Kigaru Roll   16.95\n          <p>Tuna, albacore, avocado, cucumber, topped with seared salmon, jalapeno, smelt roe, & Kigaru sauce\n          </p>\n        </li>\n        <li>Vegetable Roll   6.5\n          <p>Avocado, cucumber, radish sprouts, pickled radish, burdock root, inari\n          </p>\n        </li>\n        <li>Giant Veggie Roll   6.75\n          <p>Avocado, cucumber, squash tempura, eggplant tempura, sesame seeds, radish sprouts, topped with edamame\n          </p>\n        </li>\n        <li>Seven Samurai Roll   13.95\n          <p>Yellowtail, tuna, smoked salmon, green onion, cucumber, topped with Kigaru sauce & wasabi tobiko\n          </p>\n        </li>\n        <li>Lobster Crab Roll   16.95\n          <p>Cajun-spiced lobster & real crab salad, avocado. Deep fried and topped with smelt roe and sesame seeds. Served with yakitori sauce for dipping\n          </p>\n        </li>\n    </div>\n\n      <div class=\"grid-item\">\n        <li>Cucumber Roll (6pc)   4</li>\n        <li>Salmon Roll (6pc)   5.5</li>\n        <li>Tuna Roll (6pc)   5.5</li>\n        <li>Avocado Roll (6pc)   4.75</li>\n        <li>Avocu Roll (6pc)   5.75\n          <p>\n            Avocado, cucumber\n          </p>\n        </li>\n        <li>Kigaru Roll   16.95\n          <p>Tuna, albacore, avocado, cucumber, topped with seared salmon, jalapeno, smelt roe, & Kigaru sauce\n          </p>\n        </li>\n        <li>Vegetable Roll   6.5\n          <p>Avocado, cucumber, radish sprouts, pickled radish, burdock root, inari\n          </p>\n        </li>\n        <li>Giant Veggie Roll   6.75\n          <p>Avocado, cucumber, squash tempura, eggplant tempura, sesame seeds, radish sprouts, topped with edamame\n          </p>\n        </li>\n        <li>Seven Samurai Roll   13.95\n          <p>Yellowtail, tuna, smoked salmon, green onion, cucumber, topped with Kigaru sauce & wasabi tobiko\n          </p>\n        </li>\n        <li>Lobster Crab Roll   16.95\n          <p>Cajun-spiced lobster & real crab salad, avocado. Deep fried and topped with smelt roe and sesame seeds. Served with yakitori sauce for dipping\n          </p>\n        </li>\n      </div>\n      <div class=\"grid-item\">\n        <li>Cucumber Roll (6pc)   4</li>\n        <li>Salmon Roll (6pc)   5.5</li>\n        <li>Tuna Roll (6pc)   5.5</li>\n        <li>Avocado Roll (6pc)   4.75</li>\n        <li>Avocu Roll (6pc)   5.75\n          <p>\n            Avocado, cucumber\n          </p>\n        </li>\n        <li>Kigaru Roll   16.95\n          <p>Tuna, albacore, avocado, cucumber, topped with seared salmon, jalapeno, smelt roe, & Kigaru sauce\n          </p>\n        </li>\n        <li>Vegetable Roll   6.5\n          <p>Avocado, cucumber, radish sprouts, pickled radish, burdock root, inari\n          </p>\n        </li>\n        <li>Giant Veggie Roll   6.75\n          <p>Avocado, cucumber, squash tempura, eggplant tempura, sesame seeds, radish sprouts, topped with edamame\n          </p>\n        </li>\n        <li>Seven Samurai Roll   13.95\n          <p>Yellowtail, tuna, smoked salmon, green onion, cucumber, topped with Kigaru sauce & wasabi tobiko\n          </p>\n        </li>\n        <li>Lobster Crab Roll   16.95\n          <p>Cajun-spiced lobster & real crab salad, avocado. Deep fried and topped with smelt roe and sesame seeds. Served with yakitori sauce for dipping\n          </p>\n        </li>\n      </div>\n\n  </div>\n</div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}